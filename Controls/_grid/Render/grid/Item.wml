<!--
class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}} {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}} {{!!itemData.isActive() && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + itemData.theme}}{{!!itemData.isDragging ? ' controls-ListView__item_dragging_theme-' + itemData.theme}} js-controls-ItemActions__swipeMeasurementContainer {{ marker !== false ? currentColumn.classList.marked }}"
style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan)}}"
-->

<div attr:class="controls-Grid__row controls-ListView__itemV controls-ListView__itemV_cursor-pointer controls-Grid__row_highlightOnHover_default_theme-default controls-Grid__row_default_theme-default">
   <ws:for data="column in item.getColumns()">
      <div attr:class="{{ column.getWrapperClasses(theme, backgroundColorStyle, style) }}">
      <!--<div class="{{column.classList.base}} {{column.classList.columnScroll}} {{itemData.hasMultiSelect && column.columnIndex === 0 ? column.classList.padding.getAll()}} {{!!itemData.isActive() && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + itemData.theme}}{{!!itemData.isDragging ? ' controls-ListView__item_dragging_theme-' + itemData.theme}} js-controls-ItemActions__swipeMeasurementContainer {{ marker !== false ? currentColumn.classList.marked }}"
           style="{{column.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan)}}">-->
         <div if="{{ column.shouldDisplayMarker(marker) }}" attr:class="{{ column.getMarkerClasses(theme, style) }}"></div>
         <ws:if data="{{ column.isMultiSelectColumn() }}">
               <!--<ws:if data="{{!itemData.isAdd}}">-->
                  <ws:partial template="{{ multiSelectTpl }}">
                     <ws:templateOptions multiSelectStatus="{{ (item || itemData).isSelected() }}"
                                         key="{{ (item || itemData).getContents().getKey() }}"
                                         checkboxReadOnly="{{ checkboxReadOnly }}"/>
                  </ws:partial>
               <!--</ws:if>-->
               <!--<ws:else>
                  <div class="{{'controls-Grid__cell_spacingFirstCol_' + itemData.itemPadding.left + '_theme-' +itemData.theme}}"></div>
               </ws:else>-->
         </ws:if>
         <ws:else>
            <div attr:class="{{ column.getContentClasses(theme, cursor, highlightOnHover) }}"
                 attr:style="{{ column.getCellStyles() }}">
               <ws:partial template="{{ column.getTemplate() }}"
                           attr:key="{{ column.getInstanceId() }}"
                           column="{{ column.getOriginalColumn() }}"
                           item="{{ (item || itemData) }}"
                           itemData="{{ (item || itemData) }}"/>
            </div>
         </ws:else>
         <ws:if data="{{ column.shouldDisplayItemActions() }}">
            <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
               <ws:partial template="{{ swipeTemplate }}"
                           highlightOnHover="{{ highlightOnHover }}" />
            </ws:if>
            <ws:else data="{{ itemActionsPosition !== 'custom' }}">
               <ws:partial template="{{ itemActionsTemplate }}"
                           itemData="{{ item || itemData }}"
                           itemActionsClass="{{ itemActionsClass }}"
                           highlightOnHover="{{ highlightOnHover }}"/>
            </ws:else>
         </ws:if>
      </div>
   </ws:for>
</div>
