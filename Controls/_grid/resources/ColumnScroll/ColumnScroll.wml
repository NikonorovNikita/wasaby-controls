<div name="content" class="controls-ColumnScroll_content_wrapper {{_transformSelector}}" on:wheel="_wheelHandler()">
   <style name="contentStyle" data-vdom-ignore="true"></style>
   <ws:if data="{{_isDisplayColumnScroll()}}">
      <div name="startShadow" class="{{_calculateShadowClasses('start')}}" style="{{_calculateShadowStyles('start')}}"></div>
      <div class="{{_calculateShadowClasses('end')}}"></div>
   </ws:if>

      <ws:if data="{{ _isDragScrollingEnabled() }}">
         <Controls._grid.DragScroll
                 name="dragScroll"
                 scrollLength="{{ _contentSize - _contentContainerSize }}"
                 scrollPosition="{{ _scrollPosition }}"
                 startDragNDropCallback="{{ _options.startDragNDropCallback }}"
                 dragNDropDelay="{{ _options.dragNDropDelay }}"
                 on:dragScrolling="_positionChangedHandler()"/>
      </ws:if>

    <!-- При table-layout скроллбар нужно выводить вне таблицы. Т.к. таблица имеет transform:translateX, абсолютно -->
    <!-- спозиционированные элементы позиционируются относительно ее. Скроллбар должен занимать ширину видимой области таблицы. -->
    <ws:if data="{{_isDisplayColumnScroll() && !_isFullGridSupport()}}">
        <Controls._scroll.Scroll.Scrollbar
                name="columnScrollbar"
                position="{{_scrollPosition}}"
                direction="horizontal"
                shouldSetMarginTop="{{ false }}"
                contentSize="{{_contentSizeForHScroll}}"
                attr:class="controls-ColumnScroll_theme-{{_options.theme}} controls-ColumnScroll_without_offset js-controls-Grid_columnScroll_thumb-wrapper"
                on:positionChanged="_positionHandler()"/>
    </ws:if>

      <ws:partial
              template="{{_options.content}}"
              scope="{{_options}}"

              position="{{_scrollPosition}}"
              contentSize="{{_contentSizeForHScroll}}"
              positionChangeHandler="{{_positionHandler}}"
              bind:scrollWidth="_scrollWidth"
              bind:containerSize="_contentContainerSize"
              isDisplayColumnScroll="{{_isDisplayColumnScroll()}}"
              trackVisible="{{ true }}"

              attr:class="controls-Grid_columnScroll {{ _isDragScrollingEnabled() ? 'controls-Grid__DragScroll__content' }}"

              on:itemClick="_notifyHandler('itemClick')"
              on:itemMouseDown="_notifyHandler('itemMouseDown')"
              on:checkboxClick="_notifyHandler('checkboxClick')"
              on:itemSwipe="_notifyHandler('itemSwipe')"
              on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
              on:afterBeginEdit="_notifyHandler('afterBeginEdit')"
              on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
              on:afterEndEdit="_notifyHandler('afterEndEdit')"
              on:itemActionsClick="_notifyHandler('itemActionsClick')"
              on:actionClick="_notifyHandler('actionClick')"
              on:dragStart="_notifyHandler('dragStart')"
              on:dragEnd="_notifyHandler('dragEnd')"
              on:changeDragTarget="_notifyHandler('changeDragTarget')"
              on:dragEnter="_notifyHandler('dragEnter')"
              on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
              on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
              on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
              on:sortingChanged="_notifyHandler('sortingChanged')"
              on:focusIn="_onFocusInEditingCell()"

              on:mousedown="_onViewMouseDown()"
              on:touchstart="_onViewTouchStart()"
              on:mousemove="_onViewMouseMove()"
              on:touchmove="_onViewTouchMove()"
              on:mouseup="_onViewMouseUp()"
              on:touchend="_onViewTouchEnd()"
      />

   <Controls.event:Listener event="controlResize" on:controlResize="_resizeHandler()"/>
</div>
